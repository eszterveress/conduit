{
  "uid" : "70714e9a79919d87",
  "name" : "test_pagination",
  "fullName" : "test_conduit.test_conduit#test_pagination",
  "historyId" : "6c83321301eeae2ddcc8d3a3ff02bcbe",
  "time" : {
    "start" : 1628875150334,
    "stop" : 1628875162804,
    "duration" : 12470
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "def test_pagination():\n        browser = setup_env()\n        sign_in = webdriver_wait_xpath(browser, '//a[@href=\"#/login\"]')\n        sign_in.click()\n        user_data = [\"TesztUser99\", \"TesztUser99@gmail.com\", \"Teszt12123\"]\n        email_log = webdriver_wait_xpath(browser, '//*[@id=\"app\"]/div/div/div/div/form/fieldset[1]/input')\n        email_log.send_keys(user_data[1])\n        pw_log = browser.find_element_by_xpath('//*[@id=\"app\"]/div/div/div/div/form/fieldset[2]/input')\n        pw_log.send_keys(user_data[2])\n        home_page = browser.find_element_by_xpath('//*[@href=\"#/\"]')\n        home_page.click()\n>       second_page = webdriver_wait_xpath(browser, '//*[@id=\"app\"]/div/div[2]/div/div[1]/div[2]/div/div/nav/ul/li[2]/a')\n\ntest_conduit/test_conduit.py:125: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest_conduit/conduit_data.py:10: in webdriver_wait_xpath\n    element = WebDriverWait(browser, 10).until(EC.visibility_of_element_located((By.XPATH, value)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c9aa1fe4fc70f4d71e01df0c7fc8ce5b\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7f6b15640820>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "def test_pagination():\n        browser = setup_env()\n        sign_in = webdriver_wait_xpath(browser, '//a[@href=\"#/login\"]')\n        sign_in.click()\n        user_data = [\"TesztUser99\", \"TesztUser99@gmail.com\", \"Teszt12123\"]\n        email_log = webdriver_wait_xpath(browser, '//*[@id=\"app\"]/div/div/div/div/form/fieldset[1]/input')\n        email_log.send_keys(user_data[1])\n        pw_log = browser.find_element_by_xpath('//*[@id=\"app\"]/div/div/div/div/form/fieldset[2]/input')\n        pw_log.send_keys(user_data[2])\n        home_page = browser.find_element_by_xpath('//*[@href=\"#/\"]')\n        home_page.click()\n>       second_page = webdriver_wait_xpath(browser, '//*[@id=\"app\"]/div/div[2]/div/div[1]/div[2]/div/div/nav/ul/li[2]/a')\n\ntest_conduit/test_conduit.py:125: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest_conduit/conduit_data.py:10: in webdriver_wait_xpath\n    element = WebDriverWait(browser, 10).until(EC.visibility_of_element_located((By.XPATH, value)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c9aa1fe4fc70f4d71e01df0c7fc8ce5b\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7f6b15640820>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "a0af741ab2c20f36",
      "name" : "log",
      "source" : "a0af741ab2c20f36.txt",
      "type" : "text/plain",
      "size" : 344
    }, {
      "uid" : "8dc50c9e3770c2cf",
      "name" : "stderr",
      "source" : "8dc50c9e3770c2cf.txt",
      "type" : "text/plain",
      "size" : 215
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test_conduit"
  }, {
    "name" : "suite",
    "value" : "test_conduit"
  }, {
    "name" : "host",
    "value" : "fv-az77-942"
  }, {
    "name" : "thread",
    "value" : "3727-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_conduit.test_conduit"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "70714e9a79919d87.json",
  "parameterValues" : [ ]
}